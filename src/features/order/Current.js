import _ from 'lodash';
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import { bindActionCreators } from 'redux';
import { connect } from 'react-redux';

import AppBar from '../common/AppBar';
import * as actions from './redux/actions';

import Order from './Order';

export class Current extends Component {
  static propTypes = {
    order: PropTypes.object.isRequired,
    actions: PropTypes.object.isRequired,
  };

  componentDidMount() {
    this.props.actions.fetchOrders();
    const payload = {
      type: 'order',
      table: 'table1 this is generated by client',
      waiter: 'Nina',
      created: new Date().toString(),
      updated: new Date().toString(),
      open: true,
      ready: false,
      items: {},
    };
    this.props.actions.createOrder({ payload });
  }

  render() {
    return (
      <div className="order-current">
        <AppBar />
        {_.map(this.props.order.orders, (order) => {
          console.log(order);
          return <Order {...order} key={order.id} />;
        })}

        <div>
          that is all, do you want to view closed orders ?
        </div>
      </div>
    );
  }
}

/* istanbul ignore next */
function mapStateToProps(state) {
  return {
    order: state.order,
  };
}

/* istanbul ignore next */
function mapDispatchToProps(dispatch) {
  return {
    actions: bindActionCreators({ ...actions }, dispatch)
  };
}

export default connect(
  mapStateToProps,
  mapDispatchToProps
)(Current);
